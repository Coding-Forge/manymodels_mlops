# Continuous Integration (CI) pipeline that orchestrates the training, evaluation, and registration of the diabetes_regression model.

resources:
  containers:
  - container: mlops
    endpoint: 'azurecrconnection'
    image: 'automl/mlops/python:latest'

    # image: mcr.microsoft.com/mlops/python:latest
pr: none
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - .pipelines/
    - Automated_ML/
    - Automated_ML/02_AutoML_Training_Pipeline/02_AutoML_Training_Pipeline.ipynb
 
variables:
#- template: diabetes_regression-variables-template.yml
- group: devopsforai-aml-vg

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Model_CI'
  displayName: 'Model CI'
  jobs:
  - job: "Model_CI_Pipeline"
    displayName: "Model CI Pipeline"
    container: mlops
    timeoutInMinutes: 0
    variables:
      PASSWORD: $(Build.ArtifactStagingDirectory/drop)
      #PASSWORD: $[dependencies.secret_getter.outputs['getpassword.PASSWORD'] ]
    steps:
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: '$(AMLCONNECTION)'
        KeyVaultName: $(A_KV_NAME)
        SecretsFilter: '*'
        RunAsPreJob: false

    #- template: code-quality-template.yml
    - task: AzureCLI@1
      inputs:
        azureSubscription: $(AMLCONNECTION)
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: |
          set -e # fail on error
          # Invoke the Python building and publishing a training pipeline
          export SUBSCRIPTION=$(SUBSCRIPTION_ID)
          export WORKSPACE=$(WORKSPACE_NAME)
          export RG=$(RESOURCE_GROUP)
          jupyter nbconvert --to script ml_service/pipelines/02_AutoML_Training_Pipeline.ipynb
          python ml_service/pipelines/02_AutoML_Training_Pipeline.py
      displayName: 'Publish Azure Machine Learning Pipeline'

- stage: 'Getting_Pipeline_ID'
  displayName: 'Train and evaluate model'
  condition: succeeded()
  variables:
    BUILD_URI: '$(SYSTEM.COLLECTIONURI)$(SYSTEM.TEAMPROJECT)/_build/results?buildId=$(BUILD.BUILDID)'
  jobs:
  - job: "Get_Pipeline_ID"
    condition: and(succeeded(), eq(coalesce(variables['auto-trigger-training'], 'true'), 'true'))
    displayName: "Get Pipeline ID for execution"
    container: mlops
    timeoutInMinutes: 0
    steps:
    - task: AzureCLI@1
      inputs:
        azureSubscription: $(AMLCONNECTION)
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          python -m ml_service.pipelines.run_train_pipeline --output_pipeline_id_file "pipeline_id.txt" --skip_train_execution True
          # Set AMLPIPELINEID variable for next AML Pipeline task in next job
          AMLPIPELINEID="$(cat pipeline_id.txt)"
          echo "##vso[task.setvariable variable=AMLPIPELINEID;isOutput=true]$AMLPIPELINEID"
      name: 'getpipelineid'
      displayName: 'Get Pipeline ID'

